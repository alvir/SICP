#lang scheme
(define (square x) (* x x))
(define (improve guess x) 
  (average guess 
           (/ x guess)))
(define (average x y)
  (/ (+ x y) 2))
(define (good-enough? guess0 guess1)
  (< (abs (- guess0 guess1)) 0.001))
(define (sqrt-iter guess0 guess1 x)
  (if (good-enough? guess0 guess1)
      guess1
      (sqrt-iter guess1 (improve guess1 x) x)))
(define (sqrt x)
  (sqrt-iter 1.0 2.0 x))
(square (sqrt 30000000000))
(square (sqrt 1))
(square (sqrt 4))
(square (sqrt 0.000004))
(square (sqrt 0.0))
(square (sqrt -0.0))
