(define (p) (p))
(define (test x y)
  (if (= x 0)
    0
    y))
(test 0 (p))
; При нормальном методе вычесления происходит полная подстановка без вычисление аргументов, 
; т.е. вначале тело функции test будет выглядеть
; (if (= 0 0)
;   0
;   (p)))
; Т.к. для if вначале вычисляется выражение-предикат (= 0 0), а после 'следствие' без 
; вычисления 'альтернативы', таким образом до вычисления (p) "дело не дойдёт" 
;
; При апликативном методе вычисления вначале происходит вычисление параметров, а потом их 
; подстановка, таким образом интерпретатору приходится вычислять p, которое ссылается само
; на себя
